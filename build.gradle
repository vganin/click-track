buildscript {
    ext {
        compileSdkVersion = 31
        minSdkVersion = 21
        targetSdkVersion = 30
        kotlinVersion = '1.5.31'
        composeVersion = '1.0.4'
        kotlinxSerializationVersion = '1.3.0'
        sqlDelightVersion = '1.5.2'
    }

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion"
        classpath 'com.android.tools.build:gradle:7.0.3'
        classpath "com.squareup.sqldelight:gradle-plugin:$sqlDelightVersion"
        classpath 'com.google.gms:google-services:4.3.10'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.7.1'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.39.0'
    }
}

apply plugin: 'com.github.ben-manes.versions'
apply from: 'properties.gradle'

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

allprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            allWarningsAsErrors = (mergedProperties['allKotlinWarningsAsErrors'] ?: true).toBoolean()
        }
    }
}

def isNonStableVersion = { String version ->
    def regex = /^[0-9,.v-]+(-r)?$/
    return !(version ==~ regex)
}
tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStableVersion(it.candidate.version)
    }
}
