plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'kotlin-parcelize'
    id 'com.squareup.sqldelight'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

apply from: 'generate_icons.gradle.kts'

def keystorePropertiesFile = file("keystore.properties")
def hasKeystoreProperties = keystorePropertiesFile.exists()
def keystoreProperties = new Properties()
if (hasKeystoreProperties) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.vsevolodganin.clicktrack"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 38
        versionName "1.0.2"

        setProperty("archivesBaseName", "click-track-$versionName")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'DISPLAY_VERSION', "\"$versionName\""

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_STL=c++_shared'
            }
        }
    }

    signingConfigs {
        if (hasKeystoreProperties) {
            release {
                storeFile file(keystoreProperties['releaseStoreFile'])
                storePassword keystoreProperties['releaseStorePassword']
                keyAlias keystoreProperties['releaseKeyAlias']
                keyPassword keystoreProperties['releaseKeyPassword']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            if (hasKeystoreProperties) {
                signingConfig signingConfigs.release
            }

            manifestPlaceholders = [crashlyticsCollectionEnabled: "true"]
        }

        debug {
            applicationIdSuffix '.debug'

            manifestPlaceholders = [crashlyticsCollectionEnabled: "false"]
        }
    }

    sourceSets {
        main {
            java.srcDirs += file("build/generated/icons_gen")
        }
    }

    buildFeatures {
        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true

        freeCompilerArgs += '-Xopt-in=kotlin.ExperimentalStdlibApi'
        freeCompilerArgs += '-Xopt-in=kotlin.time.ExperimentalTime'
        freeCompilerArgs += '-Xopt-in=kotlin.contracts.ExperimentalContracts'
        freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.DelicateCoroutinesApi'
        freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.ObsoleteCoroutinesApi'
        freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
        freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.InternalCoroutinesApi'
        freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.FlowPreview'
        freeCompilerArgs += '-Xopt-in=androidx.compose.foundation.ExperimentalFoundationApi'
        freeCompilerArgs += '-Xopt-in=androidx.compose.ui.ExperimentalComposeUiApi'
        freeCompilerArgs += '-Xopt-in=androidx.compose.animation.ExperimentalAnimationApi'
        freeCompilerArgs += '-Xopt-in=androidx.compose.animation.core.InternalAnimationApi'
        freeCompilerArgs += '-Xopt-in=androidx.compose.material.ExperimentalMaterialApi'
    }

    composeOptions {
        kotlinCompilerExtensionVersion composeVersion
    }

    buildFeatures {
        prefab true
    }

    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
        }
    }

    lintOptions {
        // FIXME(https://issuetracker.google.com/issues/184830262)
        disable "NullSafeMutableLiveData"

        // FIXME(https://issuetracker.google.com/issues/189967522)
        disable "DialogFragmentCallbacksDetector"

        // FIXME(https://github.com/JakeWharton/timber/issues/408)
        disable "LogNotTimber",
                "StringFormatInTimber",
                "ThrowableNotAtBeginning",
                "BinaryOperationInTimber",
                "TimberArgCount",
                "TimberArgTypes",
                "TimberTagLength",
                "TimberExceptionLogging"
    }
}

sqldelight {
    Database {
        schemaOutputDirectory = file("src/test/sqldelight/schema")
    }
}

dependencies {
    implementation project(':lib')

    def coroutinesVersion = '1.5.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.core:core-splashscreen:1.0.0-alpha02'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'androidx.fragment:fragment-ktx:1.3.6' // Essential for Activity Result APIs (as per https://developer.android.com/training/basics/intents/result)
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.0-rc01'
    implementation 'androidx.datastore:datastore-preferences:1.0.0'

    def lifecycleVersion = '2.4.0'
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"

    // Compose
    implementation "androidx.compose.ui:ui:$composeVersion"
    implementation "androidx.compose.ui:ui-util:$composeVersion"
    implementation "androidx.compose.ui:ui-tooling:$composeVersion"
    implementation "androidx.compose.ui:ui-tooling-preview:$composeVersion"
    implementation "androidx.compose.foundation:foundation:$composeVersion"
    implementation "androidx.compose.material:material:$composeVersion"
    implementation "androidx.compose.material:material-icons-core:$composeVersion"
    implementation "androidx.compose.material:material-icons-extended:$composeVersion"

    def accompanistVersion = '0.20.0'
    implementation "com.google.accompanist:accompanist-insets:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-insets-ui:$accompanistVersion"

    implementation platform('com.google.firebase:firebase-bom:28.4.2')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    implementation 'com.google.android.play:core:1.10.2'
    implementation 'com.google.android.play:core-ktx:1.8.1'

    implementation("br.com.devsrsouza.compose.icons.android:simple-icons:1.0.0")

    implementation "com.squareup.sqldelight:android-driver:$sqlDelightVersion"
    implementation "com.squareup.sqldelight:coroutines-extensions-jvm:$sqlDelightVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$kotlinxSerializationVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinxSerializationVersion"

    def daggerVersion = '2.40'
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation 'com.jakewharton.timber:timber:5.0.1'

    implementation 'com.google.oboe:oboe:1.6.1'
}

preBuild.dependsOn 'generateIcons'
