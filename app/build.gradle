plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'
    id 'com.squareup.sqldelight'
    id 'kotlin-kapt'
}

def keystorePropertiesFile = file("keystore.properties")
def hasKeystoreProperties = keystorePropertiesFile.exists()
def keystoreProperties = new Properties()
if (hasKeystoreProperties) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "net.ganin.vsevolod.clicktrack"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode rootProject.ext.buildNumber ?: 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        if (hasKeystoreProperties) {
            release {
                storeFile file(keystoreProperties['releaseStoreFile'])
                storePassword keystoreProperties['releaseStorePassword']
                keyAlias keystoreProperties['releaseKeyAlias']
                keyPassword keystoreProperties['releaseKeyPassword']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (hasKeystoreProperties) {
                signingConfig signingConfigs.release
            }
        }
    }

    buildFeatures {
        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
        languageVersion = '1.4'

        freeCompilerArgs += '-Xopt-in=kotlin.time.ExperimentalTime'
        freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
        freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.InternalCoroutinesApi'
        freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.FlowPreview'
        freeCompilerArgs += '-Xopt-in=androidx.compose.ui.focus.ExperimentalFocus'
        freeCompilerArgs += '-Xopt-in=androidx.compose.ui.text.ExperimentalTextApi'
        freeCompilerArgs += '-Xopt-in=androidx.compose.foundation.layout.ExperimentalLayout'
        freeCompilerArgs += '-Xopt-in=androidx.compose.foundation.lazy.ExperimentalLazyDsl'
    }

    androidExtensions {
        features = ['parcelize']
    }

    composeOptions {
        kotlinCompilerVersion kotlinVersion
        kotlinCompilerExtensionVersion composeVersion
    }
}

dependencies {
    implementation project(':lib')

    def coroutinesVersion = '1.4.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.activity:activity-ktx:1.1.0'

    def lifecycleVersion = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"

    // Compose
    implementation "androidx.compose.ui:ui:$composeVersion"
    implementation "androidx.ui:ui-tooling:$composeVersion"
    implementation "androidx.compose.foundation:foundation:$composeVersion"
    implementation "androidx.compose.material:material:$composeVersion"
    implementation "androidx.compose.material:material-icons-core:$composeVersion"
    implementation "androidx.compose.material:material-icons-extended:$composeVersion"
    implementation "androidx.compose.runtime:runtime-livedata:$composeVersion"
    implementation "androidx.compose.runtime:runtime-rxjava2:$composeVersion"
    androidTestImplementation "androidx.ui:ui-test:$composeVersion"

    def sqlDelightVersion = '1.4.3'
    implementation "com.squareup.sqldelight:android-driver:$sqlDelightVersion"
    implementation "com.squareup.sqldelight:coroutines-extensions-jvm:$sqlDelightVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$kotlinXSerializationVersion"

    def daggerVersion = '2.29.1'
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
