[versions]
accompanist = "0.36.0"
decompose = "3.3.0"
kotlin = "2.2.0"
kotlinInject = "0.7.2"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization = "1.9.0"
kover = "0.9.1"
ksp = "2.2.0-2.0.2"
mockk = "1.14.5"
moko-resources = "0.25.0"
multiplatformSettings = "1.3.0"
sqldelight = "2.1.0"

[libraries]
accompanist-systemUiController = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
android-gradlePlugin = "com.android.tools.build:gradle:8.12.0"
androidx-activity-compose = "androidx.activity:activity-compose:1.10.1"
androidx-annotation = "androidx.annotation:annotation:1.9.1"
androidx-appcompat = "androidx.appcompat:appcompat:1.7.1"
androidx-constraintLayout-compose = "androidx.constraintlayout:constraintlayout-compose:1.1.1"
androidx-core = "androidx.core:core-ktx:1.16.0"
androidx-dataStore = "androidx.datastore:datastore-preferences:1.1.7"
androidx-fragment = "androidx.fragment:fragment-ktx:1.8.8"
androidx-media = "androidx.media:media:1.7.0"
androidx-splashScreen = "androidx.core:core-splashscreen:1.0.1"
androidx-workManager = "androidx.work:work-runtime-ktx:2.10.3"
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
desugarJdkLibs = "com.android.tools:desugar_jdk_libs:2.1.5"
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-bom = "com.google.firebase:firebase-bom:34.1.0"
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-crashlytics-gradlePlugin = "com.google.firebase:firebase-crashlytics-gradle:3.0.5"
firebase-crashlytics-ndk = { module = "com.google.firebase:firebase-crashlytics-ndk" }
gms-gradlePlugin = "com.google.gms:google-services:4.4.3"
googlePlay-review = "com.google.android.play:review-ktx:2.0.2"
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlininject-compiler = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlinInject" }
kotlininject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlinInject" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.7.1"
kotlinx-kover-gradlePlugin = { module = "org.jetbrains.kotlinx:kover-gradle-plugin", version.ref = "kover" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
ktlint-gradlePlugin = "org.jlleitschuh.gradle:ktlint-gradle:12.1.1"
mockk-agent = { module = "io.mockk:mockk-agent", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
moko-resources = { module = "dev.icerock.moko:resources-compose", version.ref = "moko-resources" }
moko-resources-gradlePlugin = { module = "dev.icerock.moko:resources-generator", version.ref = "moko-resources" }
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }
reorderable = "sh.calvin.reorderable:reorderable:2.5.1"
simpleIcons = "br.com.devsrsouza.compose.icons:simple-icons:1.1.1"
sqldelight-androidDriver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-nativeDriver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }
testParameterInjector = "com.google.testparameterinjector:test-parameter-injector:1.18"
uuid = "com.benasher44:uuid:0.8.4"

[bundles]
accompanist = ["accompanist-systemUiController"]
decompose = ["decompose-core", "decompose-compose"]
kotlinx-coroutines = ["kotlinx-coroutines-core", "kotlinx-coroutines-android"]
kotlinx-serialization = ["kotlinx-serialization-core", "kotlinx-serialization-json"]

[plugins]
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrains-compose = "org.jetbrains.compose:1.8.2"
kotlinx-kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
properties = "net.saliman.properties:1.6.0"
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
versions = "com.github.ben-manes.versions:0.52.0"
